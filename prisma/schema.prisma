generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  email     String   @unique
  password  String
  role      String
  customer  Customer? @relation()
}

model Customer {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique
  contact_no String   @unique
  address    String
  account_status  String    @default("active")
  order      Order[]  @relation()
  cart       Cart[]   @relation()
}

model Product {
  id              Int        @id @default(autoincrement())
  name            String     @unique
  description     String?
  brand           String
  unit_price      Int
  sale_price      Int
  quantity        Int
  measureType     String
  sku             String
  thumbnail       String
  cart_item       CartItem[] @relation()
}

model CartItem {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  amount    Int
  cart      Cart?   @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int?
}

model Cart {
  id          Int        @id @default(autoincrement())
  cart_items  CartItem[] @relation()
  customer    Customer   @relation(fields: [customerId], references: [id])
  customerId  Int        @unique()
  added_date  String
  order       Order?     @relation() 
}

// order place/confirm korle order status "accepted" dekhabe. sale order admin confirm hole dekhabe processing.
model Order {
  id              Int        @id @default(autoincrement())
  customer        Customer   @relation(fields: [customerId], references: [id])
  customerId      Int
  cart            Cart       @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId          Int        @unique()
  order_amount    Int
  order_date      String
  order_status    String 
  shipping_address String
  payment_method   String    @default("cash")
  sale_order      SaleOrder? @relation()
}

// delivery hoye gele delivered dekhabe
model SaleOrder {
  id            Int      @id @default(autoincrement())
  order         Order    @relation(fields: [orderId], references: [id])
  orderId       Int      @unique
  total_amount  Int
  paid          Int
  due           Int
  sale_date     DateTime @default(now())
  order_status  String   @default("ongoing")
}
